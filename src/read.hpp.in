#ifndef UNIT_READ_HPP
#define UNIT_READ_HPP

#include "unit.hpp"

namespace unit {

template< typename EnumType, typename QuantityType >
void
read_( std::istream& is, QuantityType& sink ){
  const auto pos = is.tellg();
  try {
    double magnitude;
    std::string symbol;
    is >> magnitude >> symbol;
    if ( is.fail() ) {
      LOG(ERROR) << "Could not read from stream";
      throw std::exception();
    }
    sink = make_< EnumType >( magnitude, symbol, sink ); 
  } catch ( std::exception& e ) {
    LOG(INFO) << "Error while reading " << quantityName< EnumType >
              << " value from stream";
    is.clear();
    is.seekg( pos );
    is.clear( std::ios_base::failbit );
    throw e;
  }
}

}

#endif
