#ifndef UNIT_TOSTRING_HPP
#define UNIT_TOSTRING_HPP

#include "unit.hpp"

namespace unit {

template< typename EnumerationClass >
const std::string&
toString( const EnumerationClass& unitEnum ){
  const auto entryIterator =
    unit::stringMap< EnumerationClass >.find( unitEnum );
  if ( entryIterator == unit::stringMap< EnumerationClass >.end() ){
    LOG(ERROR) << "Illegal unit argument encountered";
    LOG(INFO) << "Error in unit::toString function";
    throw std::domain_error("Illegal unit argument");
  }
  return entryIterator->second;
}

}

#endif
